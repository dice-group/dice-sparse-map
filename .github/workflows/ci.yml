name: CI

on: [pull_request]

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        config:
          - name: linux-x64-clang-15
            os: ubuntu-22.04
            cxx: clang++-15
          - name: linux-x64-clang-16-sanitize
            os: ubuntu-20.04
            cxx: clang++-16
            cxx-flags: "-fsanitize=address,undefined"

          - name: linux-x64-gcc-12
            os: ubuntu-22.04
            cxx: g++-12
          - name: linux-x64-gcc-13-coverage
            os: ubuntu-22.04
            cxx: g++-13
            cxx-flags: -Werror --coverage
            gcov-tool: gcov-10

    name: ${{matrix.config.name}}
    runs-on: ${{matrix.config.os}}
    steps:
      # setup env
      - name: Add repos for for gcc-13 and clang-16
        run: |
          # gcc-13
          sudo add-apt-repository ppa:ubuntu-toolchain-r/test -y
          
          # clang-16
          source /etc/os-release
          echo "deb http://apt.llvm.org/${UBUNTU_CODENAME}/ llvm-toolchain-${UBUNTU_CODENAME}-16 main" | sudo tee /etc/apt/sources.list.d/llvm-16.list
          curl https://apt.llvm.org/llvm-snapshot.gpg.key | gpg --dearmor | sudo tee /etc/apt/trusted.gpg.d/llvm-16.gpg > /dev/null

      - name: Get minimum cmake version
        uses: lukka/get-cmake@v3.24.3
        with:
          cmakeVersion: 3.22.6

      - name: Install compiler
        id: install_cc
        uses: rlalik/setup-cpp-compiler@v1.2
        with:
          compiler: ${{ matrix.config.cxx }}

      - name: Install mold
        uses: rui314/setup-mold@v1

      - name: Check out sources
        uses: actions/checkout@v3

      - name: Configure CMake
        env:
          CC: ${{ steps.install_cc.outputs.cc }}
          CXX: ${{ steps.install_cc.outputs.cxx }}
          CXXFLAGS: ${{ matrix.config.cxx-flags }}
        run: cmake -DCMAKE_BUILD_TYPE=Debug -S tests -B build_dir

      - name: Build
        working-directory: build-dir
        run: cmake --build . --parallel 2

      - name: Test
        run: ${{github.workspace}}/build/tsl_sparse_map_tests

      - name: Coverage
        run: |
          sudo apt-get install -y lcov
          lcov -c -b ${{github.workspace}}/include -d ${{github.workspace}}/build -o ${{github.workspace}}/coverage.info --no-external --gcov-tool ${{matrix.config.gcov-tool}}
          bash <(curl -s https://codecov.io/bash) -f ${{github.workspace}}/coverage.info
        if: ${{matrix.config.name == 'linux-x64-gcc-13-coverage'}}
